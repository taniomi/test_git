# Validate, run and deploy to production environment in DataBricks.
name: 'prod deployment'
# Ensure that only a single job or workflow using the same concurrency group
# runs at a time.
concurrency: 1

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
  workflow_dispatch: # enable "Run workflow" button on the Actions tab

jobs:
  deploy:
    name: 'deploy bundle'
    runs-on: ubuntu-latest

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v3

      # Download the Databricks CLI.
      # See https://github.com/databricks/setup-cli
      - uses: databricks/setup-cli@main

      # Deploy the bundle to the "dev" target as defined
      # in the bundle's settings file.
      - run: databricks bundle deploy
        working-directory: .
        env:
          DATABRICKS_TOKEN: ${{ secrets.SP_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev
  
  pipeline_update:
    name: 'run pipeline update'
    runs-on: ubuntu-latest

    # Run the "deploy" job first.
    needs: 
      - deploy

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v3

      # Use the downloaded Databricks CLI.
      - uses: databricks/setup-cli@main

      # Run the Databricks workflow named "my-job" as defined in the
      # bundle that was just deployed.
      - run: databricks bundle run my-job --refresh-all
        working-directory: .
        env:
          DATABRICKS_TOKEN: ${{ secrets.SP_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev
